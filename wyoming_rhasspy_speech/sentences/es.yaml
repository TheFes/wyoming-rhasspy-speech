language: es

lists:
  color:
    values:
      - in: "blanco"
      - in: "negro"
      - in: "rojo"
      - in: "(naranja|anaranjado)"
      - in: "amarillo"
      - in: "verde"
      - in: "azul"
      - in: "(lila|morado|púrpura)"
      - in: "marrón"
      - in: "(rosa|rosado)"
  brightness:
    range:
      type: "percentage"
      from: 10
      to: 100
      step: 10
  seconds:
    range:
      from: 10
      to: 100
      step: 10
  minutes_small:
    range:
      from: 2
      to: 9
  minutes_large:
    range:
      from: 10
      to: 100
      step: 10
  minutes_extra:
    values:
      - in: "quince"
        out: 15
      - in: "cuarenta y cinco"
        out: 45
  minutes_half:
    values:
      - in: "y medio"
        out: 30
  hours_half:
    values:
      - in: "y media"
        out: 30
  hours:
    range:
      from: 1
      to: 100
  cover_classes:
    values:
      - in: "toldo[s]"
      - in: "persiana[s]"
      - in: "cortina[s]"
      - in: "puerta[s]"
      - in: "(puerta[s]|cancela[s]|portón|portones) de garaje"
      - in: "verja[s]|cancela[s]|portón|portones"
      - in: "estor[es]"
      - in: "(contraventana[s]|veneciana[s])"
      - in: "ventana[s]"

expansion_rules:
  name: "[el |la |los |las ]{name}"
  area: "[en |del |de ][el |la ]{area}"

intents:
  # nevermind
  HassNevermind:
    data:
      - sentences:
          - "no importa"

  # date, time, weather
  HassGetCurrentTime:
    data:
      - sentences:
          - "qué hora es"

  HassGetCurrentDate:
    data:
      - sentences:
          - "cuál es la fecha"

  HassGetWeather:
    data:
      - sentences:
          - "qué tiempo hace"
      - sentences:
          - "qué tiempo hace en <name>"
        requires_context:
          domain: weather

  # turn on/off
  # open/close
  # lock/unlock
  HassTurnOn:
    data:
      # turn on
      - sentences:
          - "enciende las luces"

      - sentences:
          - "enciende <name>"
        requires_context:
          domain:
            - light
            - switch
            - media_player
            - input_boolean

      - sentences:
          - "enciende las luces <area>"

      # open
      - sentences:
          - "abre <name>"
        requires_context:
          domain:
            - cover
            - valve

      - sentences:
          - "abre [el|la|los|las] {cover_classes:device_class} <area>"

      # lock
      - sentences:
          - "cierra con llave <name>"
        requires_context:
          domain: lock

      # script
      - sentences:
          - "ejecuta <name>"
        requires_context:
          domain: script

      # scene
      - sentences:
          - "activa <name>"
        requires_context:
          domain: scene

  HassTurnOff:
    data:
      # turn off
      - sentences:
          - "apaga las luces"

      - sentences:
          - "apaga <name>"
        requires_context:
          domain:
            - light
            - switch
            - media_player
            - input_boolean

      - sentences:
          - "apaga las luces <area>"

      # close
      - sentences:
          - "cierra <name>"
        requires_context:
          domain:
            - cover
            - valve

      - sentences:
          - "cierra [el|la|los|las] {cover_classes:device_class} <area>"

      # unlock
      - sentences:
          - "abre <name>"
        requires_context:
          domain: lock

  # light brightness/color
  HassLightSet:
    data:
      # brightness
      - sentences:
          - "ajusta el brillo de <name> al {brightness} por ciento"
        requires_context:
          domain: light

      - sentences:
          - "ajusta el brillo de las luces <area> al {brightness} por ciento"

      # color
      - sentences:
          - "ajusta el color de <name> a {color}"
        requires_context:
          domain: light

      - sentences:
          - "ajusta el color de las luces <area> de <name> a {color}"

  # timers
  HassStartTimer:
    data:
      # seconds
      - sentences:
          - "configura un temporizador para {seconds} segundos"

      # minutes
      - sentences:
          - "configura un temporizador para 1 minuto"
          - "configura un temporizador para {minutes_small} minutos"
          - "configura un temporizador para {minutes_large} minutos"
          - "configura un temporizador para {minutes_extra} minutos"

      # minutes half
      - sentences:
          - "configura un temporizador para 1 minuto {minutes_half:seconds}"
          - "configura un temporizador para {minutes_small} minutos {minutes_half:seconds}"
          - "configura un temporizador para {minutes_large} minutos {minutes_half:seconds}"
          - "configura un temporizador para {minutes_extra} minutos {minutes_half:seconds}"

      # hours
      - sentences:
          - "configura un temporizador para 1 hora"
          - "configura un temporizador para {hours} horas"

      # hours half
      - sentences:
          - "configura un temporizador para 1 hora {hours_half:minutes}"

      # hours + minutes
      - sentences:
          - "configura un temporizador para 1 hora y 1 minuto"
          - "configura un temporizador para {hours} horas y {minutes_small} minutos"
          - "configura un temporizador para {hours} horas y {minutes_large} minutos"
          - "configura un temporizador para {hours} horas y {minutes_extra} minutos"

  HassCancelTimer:
    data:
      - sentences:
          - "cancela el temporizador"

  HassCancelAllTimers:
    data:
      - sentences:
          - "cancela todos los temporizadores"

  HassPauseTimer:
    data:
      - sentences:
          - "pausa el temporizador"

  HassUnpauseTimer:
    data:
      - sentences:
          - "reanuda el temporizador"

  HassTimerStatus:
    data:
      - sentences:
          - "timer status"
          - "status of [the|my] timer[s]"
          - "[how much] time [is] left on [the|my] timer[s]"

  # media players
  HassMediaPause:
    data:
      - sentences:
          - "pausa [la música]"

      - sentences:
          - "pausa <name>"
        requires_context:
          domain: media_player

  HassMediaUnpause:
    data:
      - sentences:
          - "reanuda [la música]"

      - sentences:
          - "reanuda <name>"
        requires_context:
          domain: media_player

  HassMediaNext:
    data:
      - sentences:
          - "siguiente canción"

      - sentences:
          - "siguiente canción en <name>"
        requires_context:
          domain: media_player

  # temperature
  HassGetTemperature:
    data:
      - sentences:
          - "cuál es la temperatura"

      - sentences:
          - "cuál es la temperatura del <name>"
        requires_context:
          domain: climate

      - sentences:
          - "cuál es la temperatura en <area>"

  # questions
  HassGetState:
    data:

      # doors, etc.
      - sentences:
          - "está {state} <name>"
        requires_context:
          domain:
            - cover
            - valve
        lists:
          state:
            values:
              - abiert(a|o)
              - cerrad(a|o)

      # locks
      - sentences:
          - "está {state} <name>"
        requires_context:
          domain: lock
        lists:
          state:
            values:
              - cerrad(a|o) con llave
              - abiert(a|o)

      # sensors, etc.
      - sentences:
          - "cuál es <name>"
        requires_context:
          domain:
            - sensor
            - binary_sensor

  # todo
  HassListAddItem:
    data:
      - sentences:
          - "agrega {todo_item} a [mi] [lista de] {name}"
        requires_context:
          domain: todo
