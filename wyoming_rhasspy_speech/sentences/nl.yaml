language: nl

lists:
  color:
    values:
      - in: "wit"
      - in: "zwart"
      - in: "rood"
      - in: "oranje"
      - in: "geel"
      - in: "groen"
      - in: "blauw"
      - in: "paars"
      - in: "bruin"
      - in: "roze"
  brightness:
    range:
      type: "percentage"
      from: 10
      to: 100
      step: 10
  seconds:
    range:
      from: 10
      to: 100
      step: 10
  minutes_small:
    range:
      from: 2
      to: 9
  minutes_large:
    range:
      from: 10
      to: 100
      step: 10
  minutes_extra:
    values:
      - in: fifteen
        out: 15
      - in: forty five
        out: 45
  minutes_half:
    values:
      - in: half
        out: 30
  hours_half:
    values:
      - in: half
        out: 30
  hours:
    range:
      from: 1
      to: 100
  cover_classes:
    values:
      - blinds
      - curtain
      - curtains
      - garage door
      - window
      - windows

expansion_rules:
  # generic expansion rules for sentences
  name: "[de|het] {name}"

intents:
  # nevermind
  HassNevermind:
    data:
      - sentences:
          - "laat maar [zitten]"
          - "annuleer"

  # date, time, weather
  HassGetCurrentTime:
    data:
      - sentences:
          - "hoe laat is het [nu]"
          - "hoe laat leven we [nu]"
          - "wat is de [huidige] tijd"
          - "wat is (de tijd;nu)"
          - "(vertel me|geef me) de [huidige] tijd"

  HassGetCurrentDate:
    data:
      - sentences:
          - "welke (dag|datum) is het [vandaag|nu]"
          - "wat is de [huidige] (dag|datum)"
          - "(vertel me|geef me) de [huidige] (datum|dag)"

  HassGetWeather:
    data:
      - sentences:
          - "wat voor weer is het [nu] [buiten]"
          - "(wat|hoe) is (het [huidige] weer|de [huidige] weersvoorspelling) [buiten]"

      - sentences:
          - "(wat|hoe) is (het weer|de weersvoorspelling) (voor|in|volgens) <name>"
          - "wat voor weer is het [nu] (voor|in|volgens) <name>"
        requires_context:
          domain: weather

  # turn on/off
  # open/close
  # lock/unlock
  HassTurnOn:
    data:
      # turn on
      - sentences:
          - "(zet|doe) [de] lamp[en] aan"

      - sentences:
          - "(zet|doe|maak) [de|het] {name} aan"
          - "(zet|doe|maak) [de|het] {name} (op|in) [de] {area} aan"
          - "(zet|doe|maak) [de|het] {name} (op|in) [de] {floor} [verdieping] aan"
        requires_context:
          domain:
            - light
            - switch

      - sentences:
          - "(zet|doe|maak) [alle] {area}[ ]lampen aan"
          - "(zet|doe|maak) [alle] lampen (in|op) [de|het] {area} aan"
          - "(zet|doe|maak) [alle] {floor}[ ][verdieping] lampen aan"
          - "(zet|doe|maak) [alle] lampen (in|op) [de|het] {floor} [verdieping] aan"

      # open
      - sentences:
          - "open [de|het] {name}"
          - "(doe|maak|zet) [de|het] {name} open"
        requires_context:
          domain:
            - cover
            - valve

      - sentences:
          - "open [alle] {cover_classes} (in|op) [de|het] {area}"
          - "(doe|zet|maak) [alle] {cover_classes} (in|op) [de|het] {area} open"
          - "open [alle] {area}[ ]{cover_classes}"
          - "(doe|zet|maak) [alle] {area}[ ]{cover_classes} open"

      - sentences:
          - "open [alle] {cover_classes} (op|in) [de|het] {floor}[ ][verdieping]"
          - "(doe|zet|maak) [alle] {cover_classes} (op|in) [de|het] {floor}[ ][verdieping] open"
          - "open [alle] {floor}[ ][floor] {cover_classes}"
          - "(doe|zet|maak) [alle] {floor}[ ][floor] {cover_classes} open"

      # lock
      - sentences:
          - "vergrendel [de|het] {name}"
          - (zet|doe|maak|draai) [de|het] {name} op slot"
        requires_context:
          domain: lock

      # script
      - sentences:
          - "start {name}"
        requires_context:
          domain: script

      # scene
      - sentences:
          - "activeer {name}"
        requires_context:
          domain: scene

  HassTurnOff:
    data:
      # turn off
      - sentences:
        - "(zet|doe) [de] lamp[en] uit"

    - sentences:
        - "(zet|doe|maak) [de|het] {name} uit"
        - "(zet|doe|maak) [de|het] {name} (op|in) [de] {area} uit"
        - "(zet|doe|maak) [de|het] {name} (op|in) [de] {floor} [verdieping] uit"
      requires_context:
        domain:
          - light
          - switch

    - sentences:
        - "(zet|doe|maak) [alle] {area}[ ]lampen uit"
        - "(zet|doe|maak) [alle] lampen (in|op) [de|het] {area} uit"
        - "(zet|doe|maak) [alle] {floor}[ ][verdieping] lampen uit"
        - "(zet|doe|maak) [alle] lampen (in|op) [de|het] {floor} [verdieping] uit"

      # close
      - sentences:
        - "sluit [de|het] {name}"
        - "(doe|maak|zet) [de|het] {name} dicht"
      requires_context:
        domain:
          - cover
          - valve


          - sentences:
            - "sluit [alle] {cover_classes} (in|op) [de|het] {area}"
            - "(doe|zet|maak) [alle] {cover_classes} (in|op) [de|het] {area} dicht"
            - "sluit [alle] {area}[ ]{cover_classes}"
            - "(doe|zet|maak) [alle] {area}[ ]{cover_classes} dicht"
  
        - sentences:
            - "sluit [alle] {cover_classes} (op|in) [de|het] {floor}[ ][verdieping]"
            - "(doe|zet|maak) [alle] {cover_classes} (op|in) [de|het] {floor}[ ][verdieping] dicht"
            - "sluit [alle] {floor}[ ][floor] {cover_classes}"
            - "(doe|zet|maak) [alle] {floor}[ ][floor] {cover_classes} dicht"

      # unlock
      - sentences:
        - "ontgrendel [de|het] {name}"
        - (zet|doe|maak|draai) [de|het] {name} van het slot"
      requires_context:
        domain: lock

  # # light brightness/color
  # HassLightSet:
  #   data:
  #     # brightness
  #     - sentences:
  #         - "set [the] brightness of [the] {name} to {brightness} percent"
  #         - "set [the] {name} brightness to {brightness} percent"
  #       requires_context:
  #         domain: light

  #     - sentences:
  #         - "set [the] brightness of [the] {area} to {brightness} percent"
  #         - "set [the] {area} brightness to {brightness} percent"

  #     - sentences:
  #         - "set [the] {floor} [floor] brightness to {brightness} percent"
  #         - "set [the] brightness of [the] {floor} [floor] to {brightness} percent"

  #     # color
  #     - sentences:
  #         - "set [the] [color of [the]] {name} to {color}"
  #         - "set [the] {name} [color] to {color}"
  #       requires_context:
  #         domain: light

  #     - sentences:
  #         - "set [the] [color of [the]] {area} lights to {color}"
  #         - "set [the] {area} lights to {color}"
  #         - "set [the] lights in [the] {area} to {color}"

  #     - sentences:
  #         - "set [the] [color of [the]] {floor} [floor] lights to {color}"
  #         - "set [the] {floor} [floor] lights to {color}"
  #         - "set [the] lights (on|in) [the] {floor} [floor] to {color}"

  # # timers
  # HassStartTimer:
  #   data:
  #     # seconds
  #     - sentences:
  #         - "(set|start|create) [a] timer for {seconds} seconds"

  #     # minutes
  #     - sentences:
  #         - "(set|start|create) [a] timer for 1 minute"
  #         - "(set|start|create) [a] timer for {minutes_small} minutes"
  #         - "(set|start|create) [a] timer for {minutes_large} minutes"
  #         - "(set|start|create) [a] timer for {minutes_extra} minutes"

  #     # minutes half
  #     - sentences:
  #         - "(set|start|create) [a] timer for 1 and a {minutes_half:seconds} minutes"
  #         - "(set|start|create) [a] timer for {minutes_small} and a {minutes_half:seconds} minutes"
  #         - "(set|start|create) [a] timer for {minutes_large} and a {minutes_half:seconds} minutes"
  #         - "(set|start|create) [a] timer for {minutes_extra} and a {minutes_half:seconds} minutes"

  #     # hours
  #     - sentences:
  #         - "(set|start|create) [a] timer for 1 hour"
  #         - "(set|start|create) [a] timer for {hours} hours"

  #     # hours half
  #     - sentences:
  #         - "(set|start|create) [a] timer for 1 and a {hours_half:minutes} hours"
  #         - "(set|start|create) [a] timer for {hours} and a {hours_half:hours} hours"

  #     # hours + minutes
  #     - sentences:
  #         - "(set|start|create) [a] timer for 1 hour and 1 minute"
  #         - "(set|start|create) [a] timer for {hours} hours and {minutes_small} minutes"
  #         - "(set|start|create) [a] timer for {hours} hours and {minutes_large} minutes"
  #         - "(set|start|create) [a] timer for {hours} hours and {minutes_extra} minutes"

  # HassCancelTimer:
  #   data:
  #     - sentences:
  #         - "(cancel|stop) [the|my] timer"

  # HassCancelAllTimers:
  #   data:
  #     - sentences:
  #         - "(cancel|stop) all [of] [the|my] timers"

  # HassPauseTimer:
  #   data:
  #     - sentences:
  #         - "pause [the|my] timer"

  # HassUnpauseTimer:
  #   data:
  #     - sentences:
  #         - "resume [the|my] timer"

  # HassTimerStatus:
  #   data:
  #     - sentences:
  #         - "timer status"
  #         - "status of [the|my] timer[s]"
  #         - "[how much] time [is] left on [the|my] timer[s]"

  # # media players
  # HassMediaPause:
  #   data:
  #     - sentences:
  #         - "pause [[the ]music]"

  #     - sentences:
  #         - "pause [the] {name}"
  #       requires_context:
  #         domain: media_player

  # HassMediaUnpause:
  #   data:
  #     - sentences:
  #         - "resume [[the ]music]"

  #     - sentences:
  #         - "resume [the] {name}"
  #       requires_context:
  #         domain: media_player

  # HassMediaNext:
  #   data:
  #     - sentences:
  #         - "(next|skip) [[this ](track|song)]"

  #     - sentences:
  #         - "(next|skip) [[the ](track|song)] on [the] {name}"
  #       requires_context:
  #         domain: media_player

  # # temperature
  # HassGetTemperature:
  #   data:
  #     - sentences:
  #         - "(what is|what's|what) the (temp|temperature)"

  #     - sentences:
  #         - "(what is|what's|what) [the] {name} (temp|temperature)"
  #         - "(what is|what's|what) [the] (temp|temperature) of [the] {name}"
  #       requires_context:
  #         domain: climate

  #     - sentences:
  #         - "(what is|what's|what) the (temp|temperature) in [the] {area}"
  #         - "(what is|what's|what) the {area} (temp|temperature)"

  #     - sentences:
  #         - "(what is|what's|what) the (temp|temperature) (on|in) [the] {floor} [floor]"
  #         - "(what is|what's|what) the {floor} [floor] (temp|temperature)"

  # # questions
  # HassGetState:
  #   data:

  #     # doors, etc.
  #     - sentences:
  #         - "is [the] {name} {state}"
  #       requires_context:
  #         domain:
  #           - cover
  #           - valve
  #       lists:
  #         state:
  #           values:
  #             - open
  #             - closed

  #     # locks
  #     - sentences:
  #         - "is [the] {name} {state}"
  #       requires_context:
  #         domain: lock
  #       lists:
  #         state:
  #           values:
  #             - locked
  #             - unlocked

  # # todo
  # HassListAddItem:
  #   data:
  #     - sentences:
  #         - "add {todo_item} to [the|my] {name} [list]"
  #       requires_context:
  #         domain: todo
